#!/usr/bin/env php
<?php
/**
 * +-----------------------------------------------------------------------+
 * | Copyright (c) 2010, Till Klampaeckel                                  |
 * | All rights reserved.                                                  |
 * |                                                                       |
 * | Redistribution and use in source and binary forms, with or without    |
 * | modification, are permitted provided that the following conditions    |
 * | are met:                                                              |
 * |                                                                       |
 * | o Redistributions of source code must retain the above copyright      |
 * |   notice, this list of conditions and the following disclaimer.       |
 * | o Redistributions in binary form must reproduce the above copyright   |
 * |   notice, this list of conditions and the following disclaimer in the |
 * |   documentation and/or other materials provided with the distribution.|
 * | o The names of the authors may not be used to endorse or promote      |
 * |   products derived from this software without specific prior written  |
 * |   permission.                                                         |
 * |                                                                       |
 * | THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS   |
 * | "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT     |
 * | LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR |
 * | A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  |
 * | OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, |
 * | SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT      |
 * | LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, |
 * | DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY |
 * | THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT   |
 * | (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE |
 * | OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  |
 * |                                                                       |
 * +-----------------------------------------------------------------------+
 * | Author: Till Klampaeckel <till@php.net>                               |
 * +-----------------------------------------------------------------------+
 *
 * PHP version 5
 *
 * @category Database
 * @package  DB_CouchDB_Replicator
 * @author   Till Klampaeckel <till@php.net>
 * @license  http://www.opensource.org/licenses/bsd-license.php The BSD License
 * @version  GIT: $Id$
 * @link     http://till.klampaeckel.de/blog/
 */

/**
 * Console_CommandLine
 * @ignore
 */
require_once 'Console/CommandLine.php';

/**
 * Console_ProgressBar
 * @ignore
 */
require_once 'Console/ProgressBar.php';

/**
 * HTTP_Request2
 * @ignore
 */
require_once 'HTTP/Request2.php';

/**
 * Validate
 * @ignore
 */
require_once 'Validate.php';

/**
 * DB_CouchDB_Replicator
 */
require_once 'DB/CouchDB/Replicator.php';

$parser = new Console_CommandLine(array(
    'description' => 'Replicate a database from --source to --target.',
    'version'     => '@package_version@'
));

$parser->addOption('source', array(
    'short_name'  => '-s',
    'long_name'   => '--source',
    'action'      => 'StoreString',
    'description' => 'source database'
));

$parser->addOption('target', array(
    'short_name'  => '-t',
    'long_name'   => '--target',
    'action'      => 'StoreString',
    'description' => 'target database'
));

$parser->addOption('resume', array(
    'short_name'  => '-r',
    'long_name'   => '--resume',
    'action'      => 'StoreInt',
    'description' => 'resume',
));

$parser->addOption('pagesize', array(
    'short_name'  => '-p',
    'long_name'   => '--page-size',
    'action'      => 'StoreInt',
    'description' => '# of documents to pull (default: 1000)',
));

try {
    $result = $parser->parse();
    $source = $result->options['source'];
    $target = $result->options['target'];
    $resume = $result->options['resume'];
    $page   = (int) $result->options['pagesize'];

    if (empty($target) || empty($source)) {
        throw new InvalidArgumentException("Please provide --source and --target to run.");
    }

    if (empty($page) || $page == 0) {
        $page = 1000;
    }

    $replicator = new DB_CouchDB_Replicator;
    $replicator->setPageSize($page);

    if (!$replicator->isValid($target) || !$replicator->isValid($source)) {
        throw new InvalidArgumentExceptio("Source/target must be a URI.");
    }

} catch (Exception $exc) {
    $parser->displayError($exc->getMessage());
}

$GLOBALS['current'] = (int) $resume;

$total = $replicator->getTotals($source);

// read from source, send to target
echo "Total number of documents: {$total}\n\n";

$bar = new Console_ProgressBar('- %fraction% [%bar%] %percent% ETA: %estimate%', '=>', '-', 76, $total);
$bar->update($GLOBALS['current']);

while($GLOBALS['current'] <= $total) {

    $documents = $replicator->getDocuments($source);

    $replicator->saveDocuments($target, $documents);

    $GLOBALS['current'] += $replicator->getPerPage();

    unset($documents); // cleanup

    $bar->update($GLOBALS['current']);
    sleep(1);
}

echo "\n";
echo "Done!";
